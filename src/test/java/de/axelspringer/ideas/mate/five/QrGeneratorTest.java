package de.axelspringer.ideas.mate.five;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.internal.stubbing.answers.ReturnsArgumentAt;
import org.mockito.runners.MockitoJUnitRunner;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Matchers.anyString;
import static org.mockito.Mockito.doAnswer;

@RunWith(MockitoJUnitRunner.class)
public class QrGeneratorTest {

    @InjectMocks
    private QrGenerator qrGenerator;

    @Mock
    private SymetricEncryption symetricEncryption;

    @Before
    public void beforeMethod() throws Exception {
        doAnswer(new ReturnsArgumentAt(0)).when(symetricEncryption).encrypt(anyString());
    }


    @Test
    public void testQrCode() throws Exception {
        String s = qrGenerator.generateQrText("barriwaschi+123@gmail.com");
        assertThat(s).isEqualTo("111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111100000001101011110000011011000000011111111111111\n" +
                "111111111111101111101011101100101011111011111011111111111111\n" +
                "111111111111101000101100011010100100011010001011111111111111\n" +
                "111111111111101000101010000000011110001010001011111111111111\n" +
                "111111111111101000101111001010100000011010001011111111111111\n" +
                "111111111111101111101010100100111000101011111011111111111111\n" +
                "111111111111100000001010101010101010101000000011111111111111\n" +
                "111111111111111111111100111001110000001111111111111111111111\n" +
                "111111111111100000100010000011010110110101010111111111111111\n" +
                "111111111111101101010011011110100101011011100011111111111111\n" +
                "111111111111100000001000110101111001111101010111111111111111\n" +
                "111111111111110111110100101011111000110100101111111111111111\n" +
                "111111111111111110001001000000011110100100011111111111111111\n" +
                "111111111111110111011011010110110000011011110011111111111111\n" +
                "111111111111101000101011111101001101100010110111111111111111\n" +
                "111111111111110001111001101111110001101101101111111111111111\n" +
                "111111111111110001000010100000011010000100110111111111111111\n" +
                "111111111111101101110000010110100000011011010011111111111111\n" +
                "111111111111101101100110111100111001100011010111111111111111\n" +
                "111111111111101100110011111001111101011110101111111111111111\n" +
                "111111111111111110101000000101010111000100110111111111111111\n" +
                "111111111111101001111110010110100011001001010011111111111111\n" +
                "111111111111101100000110110101001110110111010111111111111111\n" +
                "111111111111101111111000011011110001110111001111111111111111\n" +
                "111111111111101011101000100101011110100000111011111111111111\n" +
                "111111111111111111111000011010100001101110011011111111111111\n" +
                "111111111111100000001001101100101011001010000111111111111111\n" +
                "111111111111101111101110101010110000001110001011111111111111\n" +
                "111111111111101000101010100111010110100000110011111111111111\n" +
                "111111111111101000101001111011000111010100101111111111111111\n" +
                "111111111111101000101001110100001010001011000111111111111111\n" +
                "111111111111101111101010001100111000110001001111111111111111\n" +
                "111111111111100000001011110101010110001011010111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n" +
                "111111111111111111111111111111111111111111111111111111111111\n");


    }
}